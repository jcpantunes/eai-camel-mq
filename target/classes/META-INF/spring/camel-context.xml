<?xml version="1.0" encoding="UTF-8"?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->

<!-- Configures the Camel Context-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:amq="http://activemq.apache.org/schema/core"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
       http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd">

  <!-- This creates an embedded ActiveMQ Broker -->
  <broker xmlns="http://activemq.apache.org/schema/core" useJmx="false" persistent="false">
    <transportConnectors>
      <transportConnector uri="tcp://localhost:61616" />
    </transportConnectors>
  </broker>

  <!-- Lets connect the Camel ActiveMQ component to the embedded broker.
       See http://camel.apache.org/activemq.html for more information.
  -->
  <bean id="activemq" class="org.apache.activemq.camel.component.ActiveMQComponent">
    <property name="brokerURL" value="failover:tcp://localhost:61616"/>
  </bean>

  <bean class="foo.BaristaQuente" id="baristaQuente"/>
  <bean class="foo.BaristaFrio" id="baristaFrio"/>
  
  <bean class="foo.ObtemListaProdutosEnricher" id="obtemListaProdutosEnricher" />
  
  <bean id="aggregatorStrategy" class="org.apache.camel.processor.aggregate.UseLatestAggregationStrategy"/>


  <!-- Here is a sample which processes the input files
         (leaving them in place - see the 'noop' flag), and
         sends them on a JMS queue. This queue is watched by
         another route which then performs content based
         routing on the messages using XPath. 
  -->
  <camelContext xmlns="http://camel.apache.org/schema/spring">

    <route>
        <from uri="timer://foo?fixedRate=true&amp;period=60000"/>
        <process ref="obtemListaProdutosEnricher"/>
        <log message="ConteÃºdo para arquivo texto - ${body}"/>
        <to uri="activemq:gerar_arquivo_produtos"/>
    </route>

    <route>
        <from uri="activemq:gerar_arquivo_produtos"/>
        <to uri="file:src/out/?fileName=produtos-$simple{date:now:yyyyMMddHHmmssSSS}.txt"/>
        <log message="Fim - arquivo gerado"/>
    </route>
<!--
    <route>
        <from uri="file:src/data?noop=true"/>
        <to uri="activemq:pedidos_novos"/>
    </route>
    
 
    <route>
       <from uri="activemq:pedidos_novos"/>
       <log message="Pedido Completo - ${body}"/>

	   <setHeader headerName="PEDIDO_CORRELATION_ID">
	   		<xpath resultType="java.lang.String">//Pedido/PedidoID</xpath>
	   </setHeader>
  
   	   <split>
            <xpath>//Pedido/Itens/ItemPedido</xpath>
            <setHeader headerName="PEDIDO_SIZE">
    			<property>CamelSplitSize</property>
    		</setHeader>
    		<log message="ItemPedido - ${body}"/>
    		<to uri="activemq:itenspedido" />
        </split>
 	</route> 
 	      
    <route>
       <from uri="activemq:itenspedido"/>
       <log message="ItemPedido - ${body}"/>
       <choice>
          <when>
              <xpath>/ItemPedido = 'FRAPPUCINO'</xpath>
              <to uri="activemq:bebida_fria"/>
          </when>
          <otherwise>
              <to uri="activemq:bebida_quente"/>
          </otherwise>
      </choice>
    </route>
 
    <route>
        <from uri="activemq:bebida_fria?concurrentConsumers=1"/>
        <log message="Fria - ${body}"/>
        <process ref="baristaFrio"/>
        <to uri="activemq:itens_processados"/>
    </route>
    <route>
        <from uri="activemq:bebida_quente?concurrentConsumers=2"/>
        <log message="Quente - ${body}"/>
        <process ref="baristaQuente"/>
        <to uri="activemq:itens_processados"/>
    </route>

   <route>
        <from uri="activemq:itens_processados"/>
        <log message="Itens Processados - ${body}"/>
        <aggregate strategyRef="aggregatorStrategy">
            <correlationExpression>
                <header>PEDIDO_CORRELATION_ID</header>
            </correlationExpression>
            <completionSize>
                <header>PEDIDO_SIZE</header>
            </completionSize>
            <to uri="activemq:itens_agregados"/>
        </aggregate>
    </route>
    
    <route>
        <from uri="activemq:itens_agregados"/>
        <log message="Itens Agregados - ${body}"/>
        <to uri="file:src/out/?fileName=entrega-$simple{date:now:yyyyMMddHHmmssSSS}.txt"/>
    </route>
-->	

  </camelContext>

</beans>
